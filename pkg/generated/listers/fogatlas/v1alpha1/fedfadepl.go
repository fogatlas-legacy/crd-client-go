/*
Copyright FBK.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/fogatlas/crd-client-go/pkg/apis/fogatlas/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FedFADeplLister helps list FedFADepls.
type FedFADeplLister interface {
	// List lists all FedFADepls in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FedFADepl, err error)
	// FedFADepls returns an object that can list and get FedFADepls.
	FedFADepls(namespace string) FedFADeplNamespaceLister
	FedFADeplListerExpansion
}

// fedFADeplLister implements the FedFADeplLister interface.
type fedFADeplLister struct {
	indexer cache.Indexer
}

// NewFedFADeplLister returns a new FedFADeplLister.
func NewFedFADeplLister(indexer cache.Indexer) FedFADeplLister {
	return &fedFADeplLister{indexer: indexer}
}

// List lists all FedFADepls in the indexer.
func (s *fedFADeplLister) List(selector labels.Selector) (ret []*v1alpha1.FedFADepl, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FedFADepl))
	})
	return ret, err
}

// FedFADepls returns an object that can list and get FedFADepls.
func (s *fedFADeplLister) FedFADepls(namespace string) FedFADeplNamespaceLister {
	return fedFADeplNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FedFADeplNamespaceLister helps list and get FedFADepls.
type FedFADeplNamespaceLister interface {
	// List lists all FedFADepls in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FedFADepl, err error)
	// Get retrieves the FedFADepl from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FedFADepl, error)
	FedFADeplNamespaceListerExpansion
}

// fedFADeplNamespaceLister implements the FedFADeplNamespaceLister
// interface.
type fedFADeplNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FedFADepls in the indexer for a given namespace.
func (s fedFADeplNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FedFADepl, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FedFADepl))
	})
	return ret, err
}

// Get retrieves the FedFADepl from the indexer for a given namespace and name.
func (s fedFADeplNamespaceLister) Get(name string) (*v1alpha1.FedFADepl, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fedfadepl"), name)
	}
	return obj.(*v1alpha1.FedFADepl), nil
}
